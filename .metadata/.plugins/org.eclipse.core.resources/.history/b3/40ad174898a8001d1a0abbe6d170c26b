package InterviewTask;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.Test;

import pageObjects.AllPages;
import pageObjects.LanguageSelect;
import pageObjects.LoginPage;
import pageObjects.OTPPage;
import pageObjects.Wallet;
import resources.base;

public class Pages extends base{
	
	String host="34.93.179.75";
	String port="3306";
	
	
	
	@Test(priority=1)
	public void websiteloadtesting() throws IOException, InterruptedException
	{
		driver=initializeDriver();
		driver.get(prop.getProperty("url"));
		driver.manage().window().maximize();
		Thread.sleep(3000);
		LanguageSelect ls=new LanguageSelect(driver);
		Assert.assertEquals(ls.getValidateEngHeader().getText(), "Select your language");// To verify header text in english
		Assert.assertEquals(ls.getValidateEngButton().getText(), "Select");// To verify button text in english
		ls.getLanguageList().click();// To verify click functionlity form english to hindi
		Assert.assertEquals(ls.getValidateHindiHeader().getText(), "अपनी भाषा चुनें");//To verify header text in hindi
		Assert.assertEquals(ls.getValidateHindiButton().getText(), "चुनें");// To verify button text in english
		ls.getLanguageList2().click();// To verify click functionlity form hindi to english
		ls.getClickButton().click();// click on select button.
		ls.getSkipButton().click();//click on skip button.
		Thread.sleep(7000);
		ls.getLoginButton().click();// Click button to get register popup.
		Thread.sleep(2000);
		ls.getCancelButton().click();//to check cancel button functionality.
		Thread.sleep(2000);
		ls.getLoginButton().click();
		ls.getOkButton().click();//click on ok button.
		
	}
	
	@Test(priority=2)
	public void loginpagetesting() throws InterruptedException
	{
		LoginPage lp =new LoginPage(driver);
		Thread.sleep(3000);
		//Assert.assertEquals(lp.gettext().getText(), "Login with mobile number");
		lp.getSendOTP().click();
		Thread.sleep(2000);
		Assert.assertEquals(lp.getToastMsg().getText(), "Please enter valid mobile number.");
		lp.getEnterNumber().click();
		lp.getEnterNumber().sendKeys("1000000054");
		lp.getSendOTP().click();
		
	}
	
	@Test(priority=3)
	public void otppagetesting() throws InterruptedException, SQLException
	{
		OTPPage otp=new OTPPage(driver);
		//System.out.println(otp.getValidatePage().getText());
		//System.out.println(otp.getvalidate().getText());
		Assert.assertEquals(otp.getValidatePage().getText(), "We have sent you an OTP");
		otp.getClick().click();
		otp.getEnterOTP().sendKeys("1234");
		otp.getClickContinue().click();
		//Thread.sleep(2000);
		//Assert.assertEquals(otp.getValidatetoast().getText(), "Incorrect OTP");
		
		Connection con =DriverManager.getConnection("jdbc:mysql://" + host +":" + port + "/hpl_auth", "ro_user", "Rw!@#545fdg");
		Statement s=con.createStatement();
		ResultSet rs=s.executeQuery("SELECT user_otp FROM hpl_auth.hpl_attempt_user WHERE user_mobile_number ='1000000054'");
		while(rs.next())
		{
		  driver.findElement(By.xpath("//input[@type='tel']")).sendKeys(rs.getString("user_otp"));
		}
		Thread.sleep(3000);
		otp.getClickContinue().click();
		
		List<WebElement> skippage = driver.findElements(By.xpath("//span[normalize-space()='Skip']"));
		if (skippage.size() > 0)
		{
			otp.getSkipbtn().click();
		}
		else
		{
			System.out.println("Hi else");
			Thread.sleep(5000);
			Assert.assertEquals(otp.getValidateHomePage().getText(), "Top Games in India");
			
		}
		//driver.switchTo().alert().dismiss();	
		//WebDriverWait wait = new WebDriverWait(driver,20);
		//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[normalize-space()=\"Don't Allow\"]")));
		Thread.sleep(3000);
		otp.getAlertOff().click();
		otp.getClickadd().click();
		Thread.sleep(3000);
	}
	@Test(priority=4)
	public void withdrawtesting() throws InterruptedException, IOException
	{
		Wallet wd= new Wallet(driver);
		AllPages kyc=new AllPages(driver);
		wd.getClickWD().click();
		Thread.sleep(3000);
		wd.getUpdateKYC().click();
		//Assert.assertEquals(wd.getValidatePopup().getText(),"Please complete your KYC to proceed with withdrawal.");
		
		List<WebElement> state = driver.findElements(By.xpath("//button[@class='button button-next next-button']"));
		if (state.size() > 0)
		{
			System.out.println("Hello if");
			//wd.getClickOK().click();
			//Assert.assertEquals(wd.getValidateP().getText(),"Wallet");
			//Thread.sleep(3000);
			//wd.getClickWD().click();
			//Thread.sleep(3000);
			//wd.getUpdateKYC().click();
			//Assert.assertEquals(wd.getVaidateKYCPage().getText(),"KYC Process");
			kyc.getFirstName().sendKeys("Alwin");
			kyc.getLastName().sendKeys("Antony");
			kyc.getStateClick().click();
			JavascriptExecutor js = (JavascriptExecutor) driver;
			WebElement Element = driver.findElement(By.xpath("//span[normalize-space()='MAHARASHTRA']"));
			js.executeScript("arguments[0].scrollIntoView();", Element);
			kyc.getStateSelect().click();
			kyc.getNextBtn().click();
			//kyc.getBackbtn().click();
			//Thread.sleep(2000);
			//Assert.assertEquals(wd.getValidateP().getText(),"Wallet");
			//wd.getClickWD().click();
			Thread.sleep(3000);
			//wd.getUpdateKYC().click();
			System.out.println(kyc.getValPg().getText());
			//Assert.assertEquals(kyc.getPanCard().getText(),"PAN Card");
			kyc.getAadhaar().click();
			kyc.getNextBtn2().click();
			//Thread.sleep(2000);
			//Assert.assertEquals(kyc.getValidatepg().getText(),"Name on PAN Card");
			//kyc.getBackbtn2().click();
			//Assert.assertEquals(kyc.getPanCard().getText(),"PAN Card");
			//kyc.getPanCard().click();
			//kyc.getNextBtn2().click();
			
			Thread.sleep(2000);
			kyc.getLastNext().click();
			Thread.sleep(1000);
			Assert.assertEquals(kyc.getToast().getText(),"Image Is Required");
			kyc.getFrontUpload().click();
			Thread.sleep(2000);
			Runtime.getRuntime().exec("D:\\Hungama Games\\Images\\fakePAN.exe");
			Thread.sleep(5000);
			kyc.getBackUpload().click();
			Thread.sleep(2000);
			Runtime.getRuntime().exec("D:\\Hungama Games\\Images\\fakePAN.exe");
			Thread.sleep(5000);
			kyc.getAadharNo().sendKeys("123456789012");
			kyc.getAadharName().sendKeys("Alwin");
			//kyc.getBCK().click();
			//kyc.getPanCard().click();
			//kyc.getNextBtn2().click();
			Thread.sleep(3000);
			kyc.getLastNext().click();
			Thread.sleep(2000);
			Assert.assertEquals(kyc.getToast1().getText(),"Image is non compliant to request/quality standard");
			Thread.sleep(2000);
			
			kyc.getFrontUpload().click();
			Thread.sleep(2000);
			Runtime.getRuntime().exec("D:\\Hungama Games\\Images\\fakePAN.exe");
			Thread.sleep(5000);
			kyc.getBackUpload().click();
			Thread.sleep(2000);
			Runtime.getRuntime().exec("D:\\Hungama Games\\Images\\back.exe");
			Thread.sleep(5000);
			kyc.getAadharNo().clear();
			kyc.getAadharNo().sendKeys("436500841041");
			kyc.getAadharName().clear();
			kyc.getAadharName().sendKeys("Alwin Antony Alappat");
			//kyc.getBCK().click();
			//kyc.getPanCard().click();
			//kyc.getNextBtn2().click();
			Thread.sleep(3000);
			kyc.getLastNext().click();
			Thread.sleep(2000);
			Assert.assertEquals(kyc.getToast1().getText(),"Image is non compliant to request/quality standard");
			Thread.sleep(2000);
			
			
			/*List<WebElement> toast = driver.findElements(By.xpath("//span[normalize-space()='Document is already verified by other user.']"));
			if (toast.size() > 0)
			{
				System.out.println("Document is already verified by other user.");
			}
			else
				
			{
				Assert.assertEquals(kyc.getPopUp().getText(),"PAN Card Details entered successfully");
				kyc.getNextNext();
				Thread.sleep(1000);
				Assert.assertEquals(kyc.getValidatewithdrawPg().getText(),"Withdraw Cash");
				
			}*/
			
			
			
		}
			   
		else
		{
			
			System.out.println("Hi else");
			
		}
		
	}
	
	//@AfterTest
	public void teardown()
	{
		driver.close();
	}
}


